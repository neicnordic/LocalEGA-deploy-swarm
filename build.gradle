apply plugin: 'java'
apply plugin: 'maven'

group 'no.neic.localega'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
}

dependencies {
    testCompile "junit:junit:4.12"
    testCompile "org.bouncycastle:bcpg-jdk15on:1.59"
    testCompile "org.bouncycastle:bcpkix-jdk15on:1.59"
    testCompile "no.uio.ifi:crypt4gh:2.1.0"
    testCompile "commons-io:commons-io:2.5"
    testCompile "commons-codec:commons-codec:1.11"
    testCompile "org.apache.commons:commons-exec:1.3"
    testCompile "org.apache.commons:commons-collections4:4.2"
    testCompile "org.apache.commons:commons-lang3:3.9"
    testCompile "com.hierynomus:sshj:0.22.0"
    testCompile "com.rabbitmq:amqp-client:5.1.1"
    testCompile "io.minio:minio:4.0.2"
    testCompile "com.github.uio-bmi:crypt4gh:v1.2.1"
    testCompile "org.postgresql:postgresql:42.2.5"
    testCompile "org.projectlombok:lombok:1.18.6"
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.6'
}

import no.neic.localega.deploy.certificates.GenerateCertificateTask
import no.neic.localega.deploy.conf.GenerateConfIniTask
import no.neic.localega.deploy.mq.IngestTask
import no.neic.localega.deploy.keys.GenerateKeyTask

task generateCertificate(type: GenerateCertificateTask) {
    description = 'Generates client/server certs either based on supplied root CA or along with generating new root CA.\n' +
            'Sample usage:\n' +
            'gradle generateCertificate -PsubjectString=C=NO,ST=Oslo,L=Oslo,O=UiO,OU=IFI,CN=nels-developers@googlegroups.com\n' +
            'gradle generateCertificate -PsubjectString=C=NO,ST=Oslo,L=Oslo,O=UiO,OU=IFI,CN=nels-developers@googlegroups.com -PfileName=localhost -PipAddress=127.0.0.1 -Ptype=SERVER -ProotCA=rootCA.pem -ProotCAKey=rootCA-key.pem'
}

task generateKey(type: GenerateKeyTask) {
    description = 'Generates Crypt4GH key, stores password to file.\n' +
            'Sample usage:\n' +
            'gradle generateKey -Pid=ega -Ppassword=some_really_strong_password'
}

task generateConfIni(type: GenerateConfIniTask) {
    description = 'Generates conf.ini file based on environment variables.\n' +
            'Sample usage:\n' +
            'gradle generateConfIni'
}

task ingest(type: IngestTask) {
    description = 'Triggers ingestion on the CentralEGA side.\n' +
            'Sample usage:\n' +
            'gradle ingest -Puser=dummy -Pfile=README.md.enc'
}
